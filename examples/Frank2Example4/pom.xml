<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	>
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.ibissource</groupId>
	<artifactId>Frank2Example4</artifactId>
	<version>1.0</version>
	<packaging>war</packaging>

	<dependencies>
		<dependency>
			<groupId>org.ibissource</groupId>
			<artifactId>ibis-adapterframework-webapp</artifactId>
			<version>[7.6,)</version>
			<type>war</type>
		</dependency>
		<!--
		Adding core jar can prevent double jars when the versions of Frank!Flow's dependencies are different than the
		same dependencies in Frank!Framework. When core jar is added Maven will only select the version as specified
		by the core jar (the webapp doesn't have this effect as it is of type war and is only used as an overlay)
		<dependency>
			<groupId>org.ibissource</groupId>
			<artifactId>ibis-adapterframework-core</artifactId>
			<version>[7.6,)</version>
		</dependency>
		-->
		<dependency>
			<groupId>org.ibissource</groupId>
			<artifactId>frank-flow</artifactId>
			<version>[1.0,)</version>
			<!--
			Please note: When you have a local clone of Frank!Flow that has built a SNAPSHOT of the latest Frank!Flow
			version to your local repo this local SNAPSHOT will be used instead of the latest version from Nexus.
			This is probably what you are doing when you are a Frank!Flow (backend) developer. As a Frank!Flow
			(frontend) you probably also want to set frank-flow.frontend.path in build.xml (see build.xml for more info)
			 -->
		</dependency>
	</dependencies>

	<repositories>
		<repository>
			<id>ibissource</id>
			<name>Ibissource</name>
			<url>https://nexus.frankframework.org/content/repositories/public</url>
		</repository>
	</repositories>

</project>