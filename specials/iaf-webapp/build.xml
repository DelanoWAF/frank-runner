<project default="restart-iaf-webapp" xmlns:if="ant:if" xmlns:unless="ant:unless">
	<target name="restart-iaf-webapp">
		<property file="../../build.properties"/>
		<property file="build.properties"/>
		<!--
		Change the following properties to speed up the build process (either
		here to have git report your changes or in build.properties which is
		ignored by git). E.g. when you are working on core and ladybug and you are
		not (re)moving any classes you could do the following (it would still be
		a good idea to do a full build with tests before you commit or after a
		pull (which might have changed other modules)):
		<property name="maven.projects" value="core,ladybug"/>
		<property name="maven.clean" value="false"/>
		<property name="maven.skip.tests" value="true"/>
		<property name="maven.skip.javadoc" value="true"/>
		-->
		<!-- Default values, foolproof but time consuming -->
		<property name="maven.projects" value=""/>
		<property name="maven.clean" value="true"/>
		<property name="maven.skip.tests" value="false"/>
		<property name="maven.skip.javadoc" value="false"/>
		<property name="maven.verbose" value="false"/>
		<!-- Run webapp with configurations and tests from another project as it doesn't have it's own -->
		<property name="configurations.dir" value="../../frank-runner/examples/Frank2Example1/configurations"/>
		<property name="tests.dir" value="../../frank-runner/examples/Frank2Example1/tests"/>
		<!-- Stop Tomcat to prevent files used by maven being locked -->
		<exec executable="../../stop.bat" vmlauncher="false" failonerror="true">
			<arg value="-Dproject.dir=iaf/webapp"/>
		</exec>
		<!-- Build iaf -->
		<exec executable="../frank-runner/mvn.bat" dir="../../../iaf" vmlauncher="false" failonerror="true">
			<arg value="clean" if:true="${maven.clean}"/>
			<arg value="install"/>
			<arg value="--projects" unless:blank="${maven.projects}"/>
			<arg value="${maven.projects}" unless:blank="${maven.projects}"/>
			<arg value="-DskipTests" if:true="${maven.skip.tests}"/>
			<arg value="-Dmaven.javadoc.skip=true" if:true="${maven.skip.javadoc}"/>
			<arg value="-X" if:true="${maven.verbose}"/>
			<arg value="--settings" if:set="maven.settings.xml"/>
			<arg value="${maven.settings.xml}" if:set="maven.settings.xml"/>
		</exec>
		<!-- Update iaf-webapp with artifacts from local repo and start Tomcat -->
		<exec executable="../../start.bat" vmlauncher="false" failonerror="true">
			<arg value="-Dproject.dir=iaf/webapp"/>
			<arg value="-Dmaven=true"/>
			<!-- Don't clean webapp except lib folder because this is the iaf-webapp artifact that should contain those resources (which are stored in git, in the src/main/webapp folder) -->
			<arg value="-Dwebapp.gitignore.skip=true"/>
			<arg value="-Dwebapp.clean=WEB-INF/lib/**"/>
			<!-- Run webapp with configurations and tests from another project as it doesn't have it's own -->
			<arg value="-Dconfigurations.dir=${configurations.dir}"/>
			<arg value="-Dtests.dir=${tests.dir}"/>
		</exec>
	</target>
</project>
