<project default="restart" xmlns:if="ant:if" xmlns:unless="ant:unless">

	<property file="build.properties"/>

	<basename property="basedir.basename" file="${basedir}"/>
	<property name="projects.dir" value="${basedir}/.."/>
	<property name="project.dir" value="${basedir.basename}/examples/ibis4example1"/>

	<property file="${projects.dir}/${project.dir}/tomcat4ibis.properties"/>

	<available property="pom.xml.available" file="${projects.dir}/${project.dir}/pom.xml"/>

	<property name="classes.dir" value="src/main/resources" if:set="pom.xml.available"/>
	<property name="configurations.dir" value="src/main/configurations" if:set="pom.xml.available"/>
	<property name="java.dir" value="src/main/java" if:set="pom.xml.available"/>
	<property name="tests.dir" value="src/test/testtool" if:set="pom.xml.available"/>
	<property name="context.xml" value="src/main/webapp/META-INF/context.xml" if:set="pom.xml.available"/>

	<property name="classes.dir" value="classes" unless:set="pom.xml.available"/>
	<property name="configurations.dir" value="configurations" unless:set="pom.xml.available"/>
	<property name="java.dir" value="java" unless:set="pom.xml.available"/>
	<property name="tests.dir" value="tests" unless:set="pom.xml.available"/>
	<property name="context.xml" value="context.xml" unless:set="pom.xml.available"/>

	<property name="lib.server.dir" value="lib/server"/>
	<property name="lib.webapp.dir" value="lib/webapp"/>
	<property name="database.type" value="h2"/>
	<property name="h2.dir" value="${basedir}/build/h2"/>

	<property name="jdk.version" value="8"/>
	<property name="jdk.version.u" value="232"/>
	<property name="jdk.version.b" value="09"/>
	<property name="jdk.zip" value="OpenJDK8U-jdk_x64_windows_${jdk.version}.zip"/>
	<property name="jdk.url" value="https://github.com/AdoptOpenJDK/openjdk8-upstream-binaries/releases/download/jdk${jdk.version}u${jdk.version.u}-b${jdk.version.b}/OpenJDK${jdk.version}U-jdk_x64_windows_${jdk.version}u${jdk.version.u}b${jdk.version.b}.zip"/>
	<property name="jdk.dir" value="build/openjdk-${jdk.version}u${jdk.version.u}-b${jdk.version.b}"/>
	<property name="ant.version." value="1.10.7"/><!-- Extra . because ant.version is a build-in property -->
	<property name="ant.zip" value="apache-ant-${ant.version.}-bin.zip"/>
	<property name="ant.url" value="http://apache.redkiwi.nl//ant/binaries/${ant.zip}"/>
	<property name="ant.dir" value="build/apache-ant-${ant.version.}"/>
	<property name="tomcat.version" value="7.0.96"/>
	<property name="tomcat.zip" value="apache-tomcat-${tomcat.version}.zip"/>
	<property name="tomcat.url" value="https://archive.apache.org/dist/tomcat/tomcat-7/v${tomcat.version}/bin/${tomcat.zip}"/>
	<property name="tomcat.dir" value="build/apache-tomcat-${tomcat.version}"/>
	<property name="ibis.version" value="7.5-20191214.163043"/>
	<property name="ibis.war" value="ibis-adapterframework-webapp-${ibis.version}.war"/>
	<property name="ibis.url" value="https://nexus.ibissource.org/content/groups/public/org/ibissource/ibis-adapterframework-webapp/${ibis.version}/${ibis.war}"/>
	<property name="ibis.dir" value="${tomcat.dir}/webapps/ibis"/>
	<property name="jms.version" value="1.1_spec-1.1"/>
	<property name="jms.jar" value="geronimo-jms_${jms.version}.jar"/>
	<property name="jms.url" value="https://repo1.maven.org/maven2/org/apache/geronimo/specs/geronimo-jms_1.1_spec/1.1/${jms.jar}"/>
	<property name="h2.version" value="1.4.200"/>
	<property name="h2.jar" value="h2-${h2.version}.jar"/>
	<property name="h2.url" value="https://repo1.maven.org/maven2/com/h2database/h2/${h2.version}/${h2.jar}"/>
	<property name="ojdbc.version" value="8-19.3.0.0"/>
	<property name="ojdbc.jar" value="ojdbc${ojdbc.version}.jar"/>
	<property name="ojdbc.url" value="https://repo1.maven.org/maven2/com/oracle/ojdbc/ojdbc8/19.3.0.0/${ojdbc.jar}"/>

	<available property="jdk.zip.available" file="download/${jdk.zip}"/>
	<available property="jdk.dir.available" file="${jdk.dir}"/>
	<available property="ant.zip.available" file="download/${ant.zip}"/>
	<available property="ant.dir.available" file="${ant.dir}"/>
	<available property="tomcat.zip.available" file="download/${tomcat.zip}"/>
	<available property="tomcat.dir.available" file="${tomcat.dir}"/>
	<available property="ibis.war.available" file="download/${ibis.war}"/>
	<available property="ibis.dir.available" file="${ibis.dir}"/>
	<available property="jms.jar.available" file="download/${jms.jar}"/>
	<available property="h2.jar.available" file="download/${h2.jar}"/>
	<available property="ojdbc.jar.available" file="download/${ojdbc.jar}"/>

	<mkdir dir="download"/>

	<target name="build" depends="get.java,get.ant,get.tomcat,get.ibis,get.jms,get.h2,get.ojdbc">
		<!-- jdk -->
		<unzip src="download/${jdk.zip}" dest="build" unless:set="jdk.dir.available"/>
		<!-- ant -->
		<unzip src="download/${ant.zip}" dest="build" unless:set="ant.dir.available"/>
		<!-- tomcat -->
		<unzip src="download/${tomcat.zip}" dest="build" unless:set="tomcat.dir.available"/>
		<delete dir="${tomcat.dir}/webapps" unless:set="tomcat.dir.available"/><!-- Speed up startup time -->
		<copy file="download/${jms.jar}" todir="${tomcat.dir}/lib" unless:set="tomcat.dir.available"/>
		<copy file="download/${h2.jar}" todir="${tomcat.dir}/lib" unless:set="tomcat.dir.available"/>
		<copy file="download/${ojdbc.jar}" todir="${tomcat.dir}/lib" unless:set="tomcat.dir.available"/>
		<replace file="${tomcat.dir}/conf/server.xml" token="8080" value="80" summary="true" unless:set="tomcat.dir.available"/>
		<replace file="${tomcat.dir}/conf/catalina.properties" token="jarsToSkip=\" value="jarsToSkip=*" summary="true" unless:set="tomcat.dir.available"/><!-- Speed up startup time -->
		<delete><fileset dir="${tomcat.dir}/lib" includes="**-CUSTOM.jar"/></delete>
		<available property="lib.server.dir.available" file="${projects.dir}/${project.dir}/${lib.server.dir}"/>
		<copy todir="${tomcat.dir}/lib" if:set="lib.server.dir.available"><fileset dir="${projects.dir}/${project.dir}/${lib.server.dir}"/><globmapper from="*.jar" to="*-CUSTOM.jar"/></copy>
		<!-- webapp -->
		<property file="${tomcat.dir}/webapps/ibis/META-INF/maven/org.ibissource/ibis-adapterframework-webapp/pom.properties" prefix="pom.properties."/>
		<condition property="ibis.version.changed"><not><equals arg1="${ibis.version}" arg2="${pom.properties.version}"/></not></condition>
		<delete dir="${ibis.dir}" if:set="ibis.version.changed"/>
		<unzip src="download/${ibis.war}" dest="${ibis.dir}" if:set="ibis.version.changed"/>
		<delete><fileset dir="${tomcat.dir}/webapps/ibis/WEB-INF/lib" includes="**-CUSTOM.jar"/></delete>
		<available property="lib.webapp.dir.available" file="${projects.dir}/${project.dir}/${lib.webapp.dir}"/>
		<copy todir="${tomcat.dir}/webapps/ibis/WEB-INF/lib" if:set="lib.webapp.dir.available"><fileset dir="${projects.dir}/${project.dir}/${lib.webapp.dir}"/><globmapper from="*.jar" to="*-CUSTOM.jar"/></copy>
		<!-- context.xml -->
		<delete file="${tomcat.dir}/webapps/ibis/META-INF/context.xml"/>
		<available property="context.xml.available" file="${projects.dir}/${project.dir}/${context.xml}"/>
		<copy file="${projects.dir}/${project.dir}/${context.xml}" todir="${tomcat.dir}/webapps/ibis/META-INF" if:set="context.xml.available"/>
		<copy file="database/${database.type}/context.xml" todir="${tomcat.dir}/webapps/ibis/META-INF" unless:set="context.xml.available"/>
		<property file="${projects.dir}/${project.dir}/${classes.dir}/DeploymentSpecifics.properties" prefix="ds.properties."/>
		<fail message="Could not find instance.name in ${projects.dir}/${project.dir}/${classes.dir}/DeploymentSpecifics.properties" unless:set="ds.properties.instance.name"/>
		<lower name="instance.name.lc" value="${ds.properties.instance.name}"/>
		<replace file="${tomcat.dir}/webapps/ibis/META-INF/context.xml" token="@instance.name.lc@" value="${instance.name.lc}" summary="true"/>
		<replace file="${tomcat.dir}/webapps/ibis/META-INF/context.xml" token="@h2.dir@" value="${h2.dir}" summary="true"/>
		<!-- classes -->
		<delete dir="${tomcat.dir}/webapps/ibis/WEB-INF/classes"/>
		<mkdir dir="${tomcat.dir}/webapps/ibis/WEB-INF/classes"/>
		<available property="java.dir.available" file="${projects.dir}/${project.dir}/${java.dir}"/>
		<javac srcdir="${projects.dir}/${project.dir}/${java.dir}" destdir="${tomcat.dir}/webapps/ibis/WEB-INF/classes" includeantruntime="false" if:set="java.dir.available">
			<classpath>
				<fileset dir="${tomcat.dir}/webapps/ibis/WEB-INF/lib"><include name="*.jar"/></fileset>
				<fileset dir="${tomcat.dir}/lib"><include name="*.jar"/></fileset>
			</classpath>
		</javac>
		<available property="classes.dir.available" file="${projects.dir}/${project.dir}/${classes.dir}"/>
		<copy todir="${tomcat.dir}/webapps/ibis/WEB-INF/classes" if:set="classes.dir.available">
			<fileset dir="${projects.dir}/${project.dir}/${classes.dir}"/>
		</copy>
		<!-- scripts -->
		<loadresource property="jdk.dir.windows"><propertyresource name="jdk.dir"/><filterchain><tokenfilter><filetokenizer/><replacestring from="/" to="\"/></tokenfilter></filterchain></loadresource>
		<loadresource property="ant.dir.windows"><propertyresource name="ant.dir"/><filterchain><tokenfilter><filetokenizer/><replacestring from="/" to="\"/></tokenfilter></filterchain></loadresource>
		<loadresource property="tomcat.dir.windows"><propertyresource name="tomcat.dir"/><filterchain><tokenfilter><filetokenizer/><replacestring from="/" to="\"/></tokenfilter></filterchain></loadresource>
		<!-- the generic scripts do not contain user specific data and should be committed to git -->
		<antcall target="generate.generic.bat"><param name="param1" value="restart"/></antcall>
		<antcall target="generate.generic.bat"><param name="param1" value="start"/></antcall>
		<antcall target="generate.generic.bat"><param name="param1" value="stop"/></antcall>
		<antcall target="generate.generic.bat"><param name="param1" value="run"/></antcall>
		<antcall target="generate.generic.bat"><param name="param1" value="ant"/></antcall>
		<!-- the user specific scripts may contain user specific data, hence are stored in the build folder -->
		<antcall target="generate.user.specific.bat"><param name="param1" value="start"/></antcall>
		<antcall target="generate.user.specific.bat"><param name="param1" value="stop"/></antcall>
		<antcall target="generate.user.specific.bat"><param name="param1" value="run"/></antcall>
	</target>

	<target name="start" depends="build">
		<exec executable="build\start.bat" vmlauncher="false"/>
	</target>

	<!-- don't add depends="build" because when tomcat is running resources may be locked which will result in "Unable to delete file" build failures -->
	<target name="stop">
		<condition property="tomcat.running"><or><socket server="localhost" port="80"/><socket server="localhost" port="8005"/><socket server="localhost" port="8009"/></or></condition>
		<!-- prevent error in case another process in running on the tomcat port(s) and build.xml is running for the first time so stop.bat is not present yet -->
		<condition property="stop.bat.not.present"><not><resourceexists><file file="build\stop.bat"/></resourceexists></not></condition>
		<exec executable="build\stop.bat" vmlauncher="false" if:set="tomcat.running" unless:set="stop.bat.not.present"/>
		<sleep seconds="5" if:set="tomcat.running" unless:set="stop.bat.not.present"/>
		<!-- task condition socket takes a couple of seconds to execute, hence if:set="tomcat.running" is added to not run it unnecessary -->
		<condition property="tomcat.running2" if:set="tomcat.running"><or><socket server="localhost" port="80"/><socket server="localhost" port="8005"/><socket server="localhost" port="8009"/></or></condition>
		<sleep seconds="10" if:set="tomcat.running2" unless:set="stop.bat.not.present"/>
		<condition property="tomcat.running3" if:set="tomcat.running2"><or><socket server="localhost" port="80"/><socket server="localhost" port="8005"/><socket server="localhost" port="8009"/></or></condition>
		<sleep seconds="20" if:set="tomcat.running3" unless:set="stop.bat.not.present"/>
		<condition property="tomcat.running4" if:set="tomcat.running3"><or><socket server="localhost" port="80"/><socket server="localhost" port="8005"/><socket server="localhost" port="8009"/></or></condition>
		<fail message="Tomcat (or another process) is still running on port 80, 8005 or 8009. Please stop Tomcat manually or try again..." if:set="tomcat.running4"/>
	</target>

	<target name="restart" depends="stop,build">
		<!-- Don't use an antcall with target="start" otherwise target build will run another time -->
		<exec executable="build\start.bat" vmlauncher="false"/>
	</target>

	<target name="get.java" unless="jdk.zip.available">
		<get src="${jdk.url}" dest="download/${jdk.zip}" verbose="on"/>
	</target>

	<target name="get.ant" unless="ant.zip.available">
		<get src="${ant.url}" dest="download/${ant.zip}" verbose="on"/>
	</target>

	<target name="get.tomcat" unless="tomcat.zip.available">
		<get src="${tomcat.url}" dest="download/${tomcat.zip}" verbose="on"/>
	</target>

	<target name="get.ibis" unless="ibis.war.available">
		<get src="${ibis.url}" dest="download/${ibis.war}" verbose="on"/>
	</target>

	<target name="get.jms" unless="jms.jar.available">
		<get src="${jms.url}" dest="download/${jms.jar}" verbose="on"/>
	</target>

	<target name="get.h2" unless="h2.jar.available">
		<get src="${h2.url}" dest="download/${h2.jar}" verbose="on"/>
	</target>

	<target name="get.ojdbc" unless="ojdbc.jar.available">
		<get src="${ojdbc.url}" dest="download/${ojdbc.jar}" verbose="on"/>
	</target>

	<target name="generate.generic.bat">
		<condition property="restart.or.stop"><or><equals arg1="${param1}" arg2="restart"/><equals arg1="${param1}" arg2="stop"/></or></condition>
		<condition property="restart.start.or.run"><or><equals arg1="${param1}" arg2="restart"/><equals arg1="${param1}" arg2="start"/><equals arg1="${param1}" arg2="run"/></or></condition>
		<condition property="restart"><equals arg1="${param1}" arg2="restart"/></condition>
		<condition property="start.or.run"><or><equals arg1="${param1}" arg2="start"/><equals arg1="${param1}" arg2="run"/></or></condition>
		<condition property="ant"><equals arg1="${param1}" arg2="ant"/></condition>
		<echo file="${param1}.bat">@echo off
if not exist "%~dp0download\" (
	mkdir "%~dp0download"
)
if not exist "%~dp0build\" (
	mkdir "%~dp0build"
)
if not exist "%~dp0download\${jdk.zip}" (
	curl -o "%~dp0download\${jdk.zip}" -L https://github.com/AdoptOpenJDK/openjdk8-upstream-binaries/releases/download/jdk8u232-b09/OpenJDK8U-jdk_x64_windows_8u232b09.zip
	if errorlevel 1 (
		if exist "%~dp0download\${jdk.zip}" (
			del "%~dp0download\${jdk.zip}"
		)
		goto error
	)
)
if not exist "%~dp0${jdk.dir.windows}\" (
	tar xvf "%~dp0download\${jdk.zip}" -C "%~dp0build"
	if errorlevel 1 (
		if exist "%~dp0${jdk.dir.windows}\" (
			rmdir /S /Q "%~dp0${jdk.dir.windows}\"
		)
		goto error
	)
)
if not exist "%~dp0download\${ant.zip}" (
	curl -o "%~dp0download\${ant.zip}" -L http://apache.redkiwi.nl//ant/binaries/apache-ant-1.10.7-bin.zip
	if errorlevel 1 (
		if exist "%~dp0download\${ant.zip}" (
			del "%~dp0download\${ant.zip}"
		)
		goto error
	)
)
if not exist "%~dp0${ant.dir.windows}\" (
	tar xvf "%~dp0download\${ant.zip}" -C "%~dp0build"
	if errorlevel 1 (
		if exist "%~dp0${ant.dir.windows}\" (
			rmdir /S /Q "%~dp0${ant.dir.windows}\"
		)
		goto error
	)
)
set JAVA_HOME=%~dp0${jdk.dir.windows}</echo><echo file="${param1}.bat" append="true" if:set="restart.or.stop">
call "%~dp0${ant.dir.windows}\bin\ant" -buildfile "%~dp0build.xml" stop
if errorlevel 1 goto error</echo><echo file="${param1}.bat" append="true" if:set="restart.start.or.run">
call "%~dp0${ant.dir.windows}\bin\ant" -buildfile "%~dp0build.xml" build %*
if errorlevel 1 goto error</echo><echo file="${param1}.bat" append="true" if:set="ant">
call "%~dp0${ant.dir.windows}\bin\ant" %*
if errorlevel 1 goto error</echo><echo file="${param1}.bat" append="true" if:set="restart">
call "%~dp0build\start.bat" %*
if errorlevel 1 goto error</echo><echo file="${param1}.bat" append="true" if:set="start.or.run">
call "%~dp0build\${param1}.bat" %*
if errorlevel 1 goto error</echo><echo file="${param1}.bat" append="true">
goto end
:error
pause
:end</echo>
	</target>

	<target name="generate.user.specific.bat">
		<condition property="stop"><equals arg1="${param1}" arg2="stop"/></condition>
		<echo file="build/${param1}.bat">@echo off
echo Tomcat ${param1}:          http://localhost/ibis
echo Using configurations:  "${projects.dir}/${project.dir}/${configurations.dir}"
set JAVA_HOME=%~dp0..\${jdk.dir.windows}
set CATALINA_HOME=%~dp0..\${tomcat.dir.windows}</echo><echo file="build/${param1}.bat" append="true" unless:set="stop">
set JAVA_OPTS=-Xmx1024M -Dotap.stage=LOC -Dconfigurations.directory="${projects.dir}/${project.dir}/${configurations.dir}" -Dscenariosroot1.directory="../../../../../../${project.dir}/${tests.dir}" -Dscenariosroot1.description=Tomcat4Ibis %*</echo><echo file="build/${param1}.bat" append="true">
"%~dp0..\${tomcat.dir.windows}\bin\catalina.bat" ${param1}</echo>
	</target>

	<scriptdef language="javascript" name="lower">
		<attribute name="name"/>
		<attribute name="value"/> 
		project.setProperty(attributes.get("name"), attributes.get("value").toLowerCase());
	</scriptdef>

</project>